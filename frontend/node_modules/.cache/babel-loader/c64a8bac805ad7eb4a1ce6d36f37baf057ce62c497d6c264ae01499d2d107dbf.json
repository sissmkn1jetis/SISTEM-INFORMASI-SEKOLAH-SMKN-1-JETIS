{"ast":null,"code":"import { createWebHistory, createRouter } from \"vue-router\";\nimport Home from \"./components/Home.vue\";\nimport Dashboard from \"./components/Dashboard.vue\";\nimport Login from \"./components/Login.vue\";\n// import Register from \"./components/Register.vue\";\n// lazy-loaded\nconst Profile = () => import(\"./components/Profile.vue\");\nconst Admin = () => import(\"./components/Admin.vue\");\nconst Guru = () => import(\"./components/Guru.vue\");\nconst Walas = () => import(\"./components/Walas.vue\");\nconst Gurulist = () => import(\"./components/DataGuru/Gurulist.vue\");\nconst EditGuru = () => import(\"./components/DataGuru/EditGuru.vue\");\nconst AddGuru = () => import(\"./components/DataGuru/AddGuru.vue\");\nconst routes = [{\n  path: \"/\",\n  name: \"dashboard\",\n  component: Dashboard,\n  children: [{\n    path: \"/home\",\n    name: \"home\",\n    // lazy-loaded\n    component: Home\n  }, {\n    path: \"/profile\",\n    name: \"profile\",\n    // lazy-loaded\n    component: Profile\n  }, {\n    path: \"/admin\",\n    name: \"admin\",\n    // lazy-loaded\n    component: Admin\n  }, {\n    path: \"/guru\",\n    name: \"guru\",\n    // lazy-loaded\n    component: Guru\n  }, {\n    path: \"/walas\",\n    name: \"walas\",\n    // lazy-loaded\n    component: Walas\n  }, {\n    path: \"/gurulist\",\n    name: \"gurulist\",\n    // lazy-loaded\n    component: Gurulist\n  }, {\n    path: \"/gurulistedit/:id\",\n    name: \"gurulistedit\",\n    // lazy-loaded\n    component: EditGuru\n  }, {\n    path: \"/gurulistadd\",\n    name: \"gurulistadd\",\n    // lazy-loaded\n    component: AddGuru\n  }]\n},\n// {\n//   path: \"/home\",\n//   component: Home,\n// },\n{\n  path: \"/login\",\n  component: Login\n}\n// {\n//   path: \"/register\",\n//   component: Register,\n// },\n];\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  // const publicPages = ['/login', '/register', '/home'];\n  const publicPages = ['/login'];\n  const authRequired = !publicPages.includes(to.path);\n  const loggedIn = localStorage.getItem('user');\n\n  // trying to access a restricted page + not logged in\n  // redirect to login page\n  if (authRequired && !loggedIn) {\n    next('/login');\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createWebHistory","createRouter","Home","Dashboard","Login","Profile","Admin","Guru","Walas","Gurulist","EditGuru","AddGuru","routes","path","name","component","children","router","history","beforeEach","to","from","next","publicPages","authRequired","includes","loggedIn","localStorage","getItem"],"sources":["D:/filee/TA APP MODUL PENILAIAN SISWA/frontend/src/router.js"],"sourcesContent":["import { createWebHistory, createRouter } from \"vue-router\";\r\nimport Home from \"./components/Home.vue\";\r\nimport Dashboard from \"./components/Dashboard.vue\";\r\nimport Login from \"./components/Login.vue\";\r\n// import Register from \"./components/Register.vue\";\r\n// lazy-loaded\r\nconst Profile = () => import(\"./components/Profile.vue\")\r\nconst Admin = () => import(\"./components/Admin.vue\")\r\nconst Guru = () => import(\"./components/Guru.vue\")\r\nconst Walas = () => import(\"./components/Walas.vue\")\r\nconst Gurulist = () => import(\"./components/DataGuru/Gurulist.vue\")\r\nconst EditGuru = () => import(\"./components/DataGuru/EditGuru.vue\")\r\nconst AddGuru = () => import(\"./components/DataGuru/AddGuru.vue\")\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/\",\r\n    name: \"dashboard\",\r\n    component: Dashboard,\r\n    children: [\r\n      {\r\n        path: \"/home\",\r\n        name: \"home\",\r\n        // lazy-loaded\r\n        component: Home,\r\n      },\r\n      {\r\n        path: \"/profile\",\r\n        name: \"profile\",\r\n        // lazy-loaded\r\n        component: Profile,\r\n      },\r\n      {\r\n        path: \"/admin\",\r\n        name: \"admin\",\r\n        // lazy-loaded\r\n        component: Admin,\r\n      },\r\n      {\r\n        path: \"/guru\",\r\n        name: \"guru\",\r\n        // lazy-loaded\r\n        component: Guru,\r\n      },\r\n      {\r\n        path: \"/walas\",\r\n        name: \"walas\",\r\n        // lazy-loaded\r\n        component: Walas,\r\n      },\r\n\r\n      {\r\n        path: \"/gurulist\",\r\n        name: \"gurulist\",\r\n        // lazy-loaded\r\n        component: Gurulist,\r\n      },\r\n      {\r\n        path: \"/gurulistedit/:id\",\r\n        name: \"gurulistedit\",\r\n        // lazy-loaded\r\n        component: EditGuru,\r\n      },\r\n      {\r\n        path: \"/gurulistadd\",\r\n        name: \"gurulistadd\",\r\n        // lazy-loaded\r\n        component: AddGuru,\r\n      },\r\n    ]\r\n  },\r\n  // {\r\n  //   path: \"/home\",\r\n  //   component: Home,\r\n  // },\r\n  {\r\n    path: \"/login\",\r\n    component: Login,\r\n  },\r\n  // {\r\n  //   path: \"/register\",\r\n  //   component: Register,\r\n  // },\r\n\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes,\r\n});\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  // const publicPages = ['/login', '/register', '/home'];\r\n  const publicPages = ['/login'];\r\n  const authRequired = !publicPages.includes(to.path);\r\n  const loggedIn = localStorage.getItem('user');\r\n\r\n  // trying to access a restricted page + not logged in\r\n  // redirect to login page\r\n  if (authRequired && !loggedIn) {\r\n    next('/login');\r\n  } else {\r\n    next();\r\n  }\r\n});\r\n\r\nexport default router;"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,YAAY,QAAQ,YAAY;AAC3D,OAAOC,IAAI,MAAM,uBAAuB;AACxC,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,KAAK,MAAM,wBAAwB;AAC1C;AACA;AACA,MAAMC,OAAO,GAAG,MAAM,MAAM,CAAC,0BAA0B,CAAC;AACxD,MAAMC,KAAK,GAAG,MAAM,MAAM,CAAC,wBAAwB,CAAC;AACpD,MAAMC,IAAI,GAAG,MAAM,MAAM,CAAC,uBAAuB,CAAC;AAClD,MAAMC,KAAK,GAAG,MAAM,MAAM,CAAC,wBAAwB,CAAC;AACpD,MAAMC,QAAQ,GAAG,MAAM,MAAM,CAAC,oCAAoC,CAAC;AACnE,MAAMC,QAAQ,GAAG,MAAM,MAAM,CAAC,oCAAoC,CAAC;AACnE,MAAMC,OAAO,GAAG,MAAM,MAAM,CAAC,mCAAmC,CAAC;AAEjE,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAEZ,SAAS;EACpBa,QAAQ,EAAE,CACR;IACEH,IAAI,EAAE,OAAO;IACbC,IAAI,EAAE,MAAM;IACZ;IACAC,SAAS,EAAEb;EACb,CAAC,EACD;IACEW,IAAI,EAAE,UAAU;IAChBC,IAAI,EAAE,SAAS;IACf;IACAC,SAAS,EAAEV;EACb,CAAC,EACD;IACEQ,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE,OAAO;IACb;IACAC,SAAS,EAAET;EACb,CAAC,EACD;IACEO,IAAI,EAAE,OAAO;IACbC,IAAI,EAAE,MAAM;IACZ;IACAC,SAAS,EAAER;EACb,CAAC,EACD;IACEM,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE,OAAO;IACb;IACAC,SAAS,EAAEP;EACb,CAAC,EAED;IACEK,IAAI,EAAE,WAAW;IACjBC,IAAI,EAAE,UAAU;IAChB;IACAC,SAAS,EAAEN;EACb,CAAC,EACD;IACEI,IAAI,EAAE,mBAAmB;IACzBC,IAAI,EAAE,cAAc;IACpB;IACAC,SAAS,EAAEL;EACb,CAAC,EACD;IACEG,IAAI,EAAE,cAAc;IACpBC,IAAI,EAAE,aAAa;IACnB;IACAC,SAAS,EAAEJ;EACb,CAAC;AAEL,CAAC;AACD;AACA;AACA;AACA;AACA;EACEE,IAAI,EAAE,QAAQ;EACdE,SAAS,EAAEX;AACb;AACA;AACA;AACA;AACA;AAAA,CAED;;AAED,MAAMa,MAAM,GAAGhB,YAAY,CAAC;EAC1BiB,OAAO,EAAElB,gBAAgB,EAAE;EAC3BY;AACF,CAAC,CAAC;AAEFK,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC;EACA,MAAMC,WAAW,GAAG,CAAC,QAAQ,CAAC;EAC9B,MAAMC,YAAY,GAAG,CAACD,WAAW,CAACE,QAAQ,CAACL,EAAE,CAACP,IAAI,CAAC;EACnD,MAAMa,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;;EAE7C;EACA;EACA,IAAIJ,YAAY,IAAI,CAACE,QAAQ,EAAE;IAC7BJ,IAAI,CAAC,QAAQ,CAAC;EAChB,CAAC,MAAM;IACLA,IAAI,EAAE;EACR;AACF,CAAC,CAAC;AAEF,eAAeL,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}