{"ast":null,"code":"import User from \"../../services/user.service\";\nimport { Form, Field, ErrorMessage } from \"vee-validate\";\nimport * as yup from \"yup\";\nexport default {\n  components: {\n    Form,\n    Field,\n    ErrorMessage\n  },\n  data() {\n    const schema = yup.object().shape({\n      username: yup.string().required(\"Username is required!\").min(3, \"Must be at least 3 characters!\").max(20, \"Must be maximum 20 characters!\"),\n      email: yup.string().required(\"Email is required!\").email(\"Email is invalid!\").max(50, \"Must be maximum 50 characters!\"),\n      password: yup.string().required(\"Password is required!\").min(6, \"Must be at least 6 characters!\").max(40, \"Must be maximum 40 characters!\"),\n      confPassword: yup.string().required(\"Password is required!\").min(6, \"Must be at least 6 characters!\").max(40, \"Must be maximum 40 characters!\"),\n      roles: yup.string().required(\"Password is required!\").min(6, \"Must be at least 6 characters!\").max(40, \"Must be maximum 40 characters!\")\n    });\n    return {\n      contents: [],\n      schema,\n      successful: false,\n      loading: false,\n      message: \"\"\n    };\n  },\n  created() {\n    this.getUser();\n  },\n  methods: {\n    showModal() {\n      $(\"#modalmuncul\").modal(\"show\");\n    },\n    getUser() {\n      User.getUser().then(response => {\n        this.contents = response.data;\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    handleUser(user) {\n      this.message = \"\";\n      this.successful = false;\n      this.loading = true;\n      User.create(user).then(data => {\n        this.message = data.message;\n        this.successful = true;\n        this.loading = false;\n      }, error => {\n        this.message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        this.successful = false;\n        this.loading = false;\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["User","Form","Field","ErrorMessage","yup","components","data","schema","object","shape","username","string","required","min","max","email","password","confPassword","roles","contents","successful","loading","message","created","getUser","methods","showModal","$","modal","then","response","catch","e","console","log","handleUser","user","create","error","toString"],"sourceRoot":"","sources":["D:\\filee\\TA APP MODUL PENILAIAN SISWA\\frontend\\src\\components\\DataUser\\Userlist.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- Content Header (Page header) -->\r\n    <section class=\"content-header\">\r\n      <div class=\"container-fluid\">\r\n        <div class=\"row mb-2\">\r\n          <div class=\"col-sm-6\">\r\n            <h1>Data User</h1>\r\n          </div>\r\n          <div class=\"col-sm-6\">\r\n            <ol class=\"breadcrumb float-sm-right\">\r\n              <li class=\"breadcrumb-item\">\r\n                <router-link to=\"/dashboard\">Dashboard</router-link>\r\n              </li>\r\n              <li class=\"breadcrumb-item active\">Data User</li>\r\n            </ol>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- /.container-fluid -->\r\n    </section>\r\n\r\n    <!-- Main content -->\r\n    <section class=\"content\">\r\n      <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <div class=\"card\">\r\n              <!-- /.card-header -->\r\n              <div class=\"card-body\">\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn btn-success mb-2\"\r\n                  @click=\"showModal\"\r\n                >\r\n                  Tambah User\r\n                </button>\r\n                <table id=\"example2\" class=\"table table-bordered table-hover\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>No</th>\r\n                      <th>Username</th>\r\n                      <th>Email</th>\r\n                      <th>Role</th>\r\n                      <th>Action</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr v-for=\"(content, index) in contents\" :key=\"index.id\">\r\n                      <td>{{ ++index }}</td>\r\n                      <td>{{ content.username }}</td>\r\n                      <td>{{ content.email }}</td>\r\n                      <td>\r\n                        <li v-for=\"role in content.roles\" :key=\"role\">\r\n                          {{ role.name }}\r\n                        </li>\r\n                      </td>\r\n                      <td>Edit | Hapus</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              <!-- /.card-body -->\r\n            </div>\r\n            <!-- /.card -->\r\n          </div>\r\n          <!-- /.col -->\r\n        </div>\r\n        <!-- /.row -->\r\n      </div>\r\n      <!-- /.container-fluid -->\r\n      <div class=\"modal fade\" id=\"modalmuncul\">\r\n        <div class=\"modal-dialog modal-lg\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h4 class=\"modal-title\">Tambah User</h4>\r\n              <button\r\n                type=\"button\"\r\n                class=\"close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              >\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <!-- form start -->\r\n              <Form @submit=\"handleUser\" :validation-schema=\"schema\">\r\n                <div v-if=\"!successful\">\r\n                  <div class=\"card-body\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"username\">Username</label>\r\n                      <Field\r\n                        name=\"username\"\r\n                        type=\"text\"\r\n                        class=\"form-control\"\r\n                        placeholder=\"Username\"\r\n                      />\r\n                      <ErrorMessage name=\"username\" class=\"error-feedback\" />\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                      <label for=\"email\">Email</label>\r\n                      <Field\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        class=\"form-control\"\r\n                        placeholder=\"Enter Email \"\r\n                      />\r\n                      <ErrorMessage name=\"email\" class=\"error-feedback\" />\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                      <label for=\"password\">Password</label>\r\n                      <Field\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        class=\"form-control\"\r\n                        placeholder=\"Password\"\r\n                      />\r\n                      <ErrorMessage name=\"password\" class=\"error-feedback\" />\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                      <label for=\"confPassword\">Confirmasi Password</label>\r\n                      <Field\r\n                        name=\"confPassword\"\r\n                        type=\"password\"\r\n                        class=\"form-control\"\r\n                        placeholder=\"Confirmasi Password\"\r\n                      />\r\n                      <ErrorMessage\r\n                        name=\"confPassword\"\r\n                        class=\"error-feedback\"\r\n                      />\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                      <label for=\"roles\">Role</label>\r\n                      <div class=\"form-check\">\r\n                        <Field\r\n                          class=\"form-check-input\"\r\n                          name=\"roles\"\r\n                          type=\"checkbox\"\r\n                          value=\"guru\"\r\n                        />\r\n                        Guru\r\n                      </div>\r\n                      <div class=\"form-check\">\r\n                        <Field\r\n                          class=\"form-check-input\"\r\n                          name=\"roles\"\r\n                          type=\"checkbox\"\r\n                          value=\"walas\"\r\n                        />\r\n                        Walas\r\n                      </div>\r\n                      <div class=\"form-check\">\r\n                        <Field\r\n                          class=\"form-check-input\"\r\n                          name=\"roles\"\r\n                          type=\"checkbox\"\r\n                          value=\"admin\"\r\n                        />\r\n                        Admin\r\n                      </div>\r\n                      <ErrorMessage name=\"roles\" class=\"error-feedback\" />\r\n                    </div>\r\n                  </div>\r\n                  <!-- /.card-body -->\r\n                  <div class=\"modal-footer\">\r\n                    <button\r\n                      type=\"button\"\r\n                      class=\"btn btn-secondary\"\r\n                      data-dismiss=\"modal\"\r\n                    >\r\n                      Close\r\n                    </button>\r\n                    <button class=\"btn btn-primary\" :disabled=\"loading\">\r\n                      <span\r\n                        v-show=\"loading\"\r\n                        class=\"spinner-border spinner-border-sm\"\r\n                      ></span>\r\n                      Simpan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n          <!-- /.modal-content -->\r\n        </div>\r\n        <!-- /.modal-dialog -->\r\n      </div>\r\n      <!-- /.modal -->\r\n    </section>\r\n    <!-- /.content -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport User from \"../../services/user.service\";\r\nimport { Form, Field, ErrorMessage } from \"vee-validate\";\r\nimport * as yup from \"yup\";\r\nexport default {\r\n  components: {\r\n    Form,\r\n    Field,\r\n    ErrorMessage,\r\n  },\r\n  data() {\r\n    const schema = yup.object().shape({\r\n      username: yup\r\n        .string()\r\n        .required(\"Username is required!\")\r\n        .min(3, \"Must be at least 3 characters!\")\r\n        .max(20, \"Must be maximum 20 characters!\"),\r\n      email: yup\r\n        .string()\r\n        .required(\"Email is required!\")\r\n        .email(\"Email is invalid!\")\r\n        .max(50, \"Must be maximum 50 characters!\"),\r\n      password: yup\r\n        .string()\r\n        .required(\"Password is required!\")\r\n        .min(6, \"Must be at least 6 characters!\")\r\n        .max(40, \"Must be maximum 40 characters!\"),\r\n      confPassword: yup\r\n        .string()\r\n        .required(\"Password is required!\")\r\n        .min(6, \"Must be at least 6 characters!\")\r\n        .max(40, \"Must be maximum 40 characters!\"),\r\n      roles: yup\r\n        .string()\r\n        .required(\"Password is required!\")\r\n        .min(6, \"Must be at least 6 characters!\")\r\n        .max(40, \"Must be maximum 40 characters!\"),\r\n    });\r\n    return {\r\n      contents: [],\r\n      schema,\r\n      successful: false,\r\n      loading: false,\r\n      message: \"\",\r\n    };\r\n  },\r\n  created() {\r\n    this.getUser();\r\n  },\r\n  methods: {\r\n    showModal() {\r\n      $(\"#modalmuncul\").modal(\"show\");\r\n    },\r\n    getUser() {\r\n      User.getUser()\r\n        .then((response) => {\r\n          this.contents = response.data;\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    },\r\n    handleUser(user) {\r\n      this.message = \"\";\r\n      this.successful = false;\r\n      this.loading = true;\r\n      User.create(user).then(\r\n        (data) => {\r\n          this.message = data.message;\r\n          this.successful = true;\r\n          this.loading = false;\r\n        },\r\n        (error) => {\r\n          this.message =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n          this.successful = false;\r\n          this.loading = false;\r\n        }\r\n      );\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.error-feedback {\r\n  color: red;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}